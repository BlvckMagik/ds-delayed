#!/bin/bash

echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –¥–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è..."

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É
echo "üìÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É..."
required_dirs=("backend" "frontend" "scripts")
for dir in "${required_dirs[@]}"; do
    if [ -d "../$dir" ]; then
        echo "‚úÖ $dir/"
    else
        echo "‚ùå $dir/ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
done

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ–∞–π–ª–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
echo "üìÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
required_files=(
    "backend/package.json"
    "frontend/package.json"
    "backend/src/main.ts"
    "frontend/next.config.js"
    "backend/src/config/database.config.ts"
    "RENDER_DEPLOYMENT.md"
)
for file in "${required_files[@]}"; do
    if [ -f "../$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
done

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
echo "üîê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
if [ -f "../backend/.env" ]; then
    echo "‚úÖ backend/.env"
else
    echo "‚ö†Ô∏è  backend/.env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (—Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ backend/env.example)"
fi

if [ -f "../frontend/.env" ]; then
    echo "‚úÖ frontend/.env"
else
    echo "‚ö†Ô∏è  frontend/.env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (—Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ frontend/env.example)"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
echo "üì¶ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
cd ../backend
if [ -d "node_modules" ]; then
    echo "‚úÖ backend/node_modules"
else
    echo "‚ö†Ô∏è  backend/node_modules –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (–∑–∞–ø—É—Å—Ç—ñ—Ç—å pnpm install)"
fi

cd ../frontend
if [ -d "node_modules" ]; then
    echo "‚úÖ frontend/node_modules"
else
    echo "‚ö†Ô∏è  frontend/node_modules –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (–∑–∞–ø—É—Å—Ç—ñ—Ç—å pnpm install)"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Docker
echo "üê≥ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    echo "‚úÖ Docker –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    if command -v docker-compose &> /dev/null; then
        echo "‚úÖ Docker Compose –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        echo "‚ö†Ô∏è  Docker Compose –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    fi
else
    echo "‚ö†Ô∏è  Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è)"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Git
echo "üìö –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Git..."
if [ -d "../.git" ]; then
    echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π"
    cd ..
    current_branch=$(git branch --show-current)
    echo "üìç –ü–æ—Ç–æ—á–Ω–∞ –≥—ñ–ª–∫–∞: $current_branch"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –Ω–µ–∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–º—ñ–Ω–∏
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ö†Ô∏è  –Ñ –Ω–µ–∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–º—ñ–Ω–∏ –≤ Git"
        git status --short
    else
        echo "‚úÖ Git —á–∏—Å—Ç–∏–π"
    fi
else
    echo "‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    exit 1
fi

echo ""
echo "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:"
echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –Ω–∞ Render!"
echo ""
echo "üìã –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
echo "1. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: ./scripts/deploy-render.sh"
echo "2. –°–ª—ñ–¥—É–π—Ç–µ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º –≤ RENDER_DEPLOYMENT.md"
echo "3. –°—Ç–≤–æ—Ä—ñ—Ç—å —Å–µ—Ä–≤—ñ—Å–∏ –Ω–∞ Render Dashboard" 